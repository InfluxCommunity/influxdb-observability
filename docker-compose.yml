version: '3'
services:
  jaeger-query:
    image: jaegertracing/jaeger-query:1.43
    stop_grace_period: 10s
    ports:
    - "16686:16686" # web UI
    depends_on:
    - jaeger-influxdb
    environment:
      #QUERY_BEARER_TOKEN_PROPAGATION: true
      LOG_LEVEL: warn
      SPAN_STORAGE_TYPE: grpc-plugin
      GRPC_STORAGE_SERVER: jaeger-influxdb:17271
      GRPC_STORAGE_CONNECTION_TIMEOUT: 30s
      QUERY_HTTP_SERVER_HOST_PORT: :16686
      ADMIN_HTTP_HOST_PORT: :16687
      QUERY_UI_CONFIG: /jaeger-ui-config.json
    volumes:
    - ./demo/jaeger-ui-config.json:/jaeger-ui-config.json:ro

  jaeger-influxdb:
    image: jacobmarble/jaeger-influxdb:latest
    stop_grace_period: 10s
    environment:
      LOG_LEVEL: debug
      LISTEN_ADDR: :17271
      INFLUXDB_TIMEOUT: 30s
            # required: hostname or hostname:port
      INFLUXDB_ADDR: eu-central-1-1.aws.cloud2.influxdata.com
      # required: bucket name
      INFLUXDB_BUCKET: otel
      # optional: bucket name for archived traces
      INFLUXDB_BUCKET_ARCHIVE:
      # required
      INFLUXDB_TOKEN: CAFzHCRxTE2_pvg3wrRZvWak24AQ6avYIdTrki8pljufGbiMv2WgJvNx24mOb6yoPptvvVOydSlz-LbjfsyvGA==

  hotrod:
    image: jaegertracing/example-hotrod:1.41.0
    stop_grace_period: 1s
    ports:
    - "8080:8080" # web UI
    - "8083:8083"
    depends_on:
    - otelcol-influxdb
    environment:
      JAEGER_AGENT_HOST: otelcol-influxdb
      JAEGER_AGENT_PORT: 6831
    command: ["all", "-m", "prometheus"]

  otelcol-influxdb:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config", "/config.yml" ]
    stop_grace_period: 10s
    volumes:
    - ./demo/otelcol-config.yml:/config.yml:ro

  grafana:
    image: jaymand13/grafana-oss:sql
    ports:
      - 3000:3000
    environment:
      - GF_INSTALL_PLUGINS=influxdata-flightsql-datasource
    volumes: 
      - grafana:/var/lib/grafana/
    restart: always
volumes:
  grafana: